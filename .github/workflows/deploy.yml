jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Connect to server, Pull, and Deploy
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.SSH_SERVER }}
        username: ${{ secrets.SSH_USER }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        port: 65002

        # Le script est maintenant multiligne pour plus de clarté
        script: |
          # Se positionne dans le répertoire du projet
          cd domains/sandybrown-duck-473650.hostingersite.com/public_html/server-sushi-symfony
          
          # ÉTAPE 1 : On met à jour le code AVANT toute autre chose
          echo ">>> 1. Pulling latest code from GitHub..."
          git pull origin main
          
          # ÉTAPE 2 : On crée le fichier .env en injectant directement les secrets
          # Les secrets sont remplacés par GitHub Actions AVANT d'envoyer le script au serveur
          echo ">>> 2. Creating .env file..."
          cat <<EOF > .env
          APP_ENV=prod
          APP_SECRET='${{ secrets.APP_SECRET }}'
          DATABASE_URL='${{ secrets.DATABASE_URL }}'
          DATABASE_DRIVER='${{ secrets.DATABASE_DRIVER }}'
          DATABASE_SERVER_VERSION='${{ secrets.DATABASE_SERVER_VERSION }}'
          EMAIL_ADMIN='${{ secrets.EMAIL_ADMIN }}'
          EMAIL_FROM='${{ secrets.EMAIL_FROM }}'
          EMAIL_OWNER='${{ secrets.EMAIL_OWNER }}'
          MAILER_DSN='${{ secrets.MAILER_DSN }}'
          CORS_ALLOW_ORIGIN='^https?://(localhost|127\.0\.0\.1)(:[0-9]+)?$'
          EOF
          
          # Vérification simple que le fichier a été créé et n'est pas vide
          echo ">>> .env file created. Content overview:"
          cat .env | grep 'APP_ENV'
          
          # ÉTAPE 3 : On installe les dépendances PHP
          echo ">>> 3. Installing Composer dependencies..."
          ../composer.phar install --no-dev --optimize-autoloader
          
          # ÉTAPE 4 : On vide le cache Symfony
          echo ">>> 4. Clearing Symfony cache..."
          php bin/console cache:clear --env=prod
          
          # ÉTAPE 5 : On applique les migrations de la base de données
          echo ">>> 5. Running database migrations..."
          php bin/console doctrine:migrations:migrate --no-interaction --allow-no-migration
          
          echo "✅ Deployment finished successfully!"

